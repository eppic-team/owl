package examples; 

import java.io.File;
import java.io.IOException;
import edu.uci.ics.jung.graph.util.Pair;
import owl.core.structure.Pdb;
import owl.core.structure.PdbLoadError;
import owl.core.structure.PdbfilePdb;
import owl.core.structure.graphs.FileRIGraph;
import owl.core.structure.graphs.RIGEdge;
import owl.core.structure.graphs.RIGNode;
import owl.core.structure.graphs.RIGraph;
import owl.core.util.FileFormatError;

public class ContactMapOverDir {

	static int calcCMO(RIGraph graph, RIGraph graph2)  {
		int cmocount=0; 
		for (RIGEdge edge:graph.getEdges()) {
			// the edge doesn't actually contain information about the residues it connects.
			// we get that information from the graph 	
			Pair<RIGNode> endpoints = graph.getEndpoints(edge);
			int i = endpoints.getFirst().getResidueSerial();
			int j = endpoints.getSecond().getResidueSerial();
			if (graph2.containsEdgeIJ(i,j)) {
				cmocount++; 
			} // end if edge is in overlap 
		} // next edges 
		return cmocount; 
	} // end calcCMO
		
	/**
	 * Comparing consensus contact maps generated by cmview 
	 * and calculating the CMO for each model in a given workdirectory 
	 * @param args requires path and filenames of two contact maps as command line parameters
	 * @throws IOException
	 * @throws FileFormatError
	 * @author matthias winkelmann, Michael Lappe
	 */
	public static void main(String[] args) throws IOException, FileFormatError {
		String workdir = args[0]; // attn : dirname should include / in the end s.t. workdir + filename = absolute filename 	
		String cmpfile = args[1];
		String chains[]; 
		int cmox = 0; 
		// Load native PDB structure from file - use when comparing models from CASP8 to the now known structure 
		System.out.println("Comparing contactMap file "+cmpfile+" to models in "+workdir); 
		RIGraph cmpgraph = new FileRIGraph(cmpfile);
		System.out.println("loaded native "+cmpfile);
		
		String cType = "Cb"; // contact type like "Ca"/"Cb"/"ALL"
		double cutoff = 7.5; 
		Pdb modPDB;
		RIGraph modgraph; 
		String modfile; 
		
		// Load native PDB structure from file - use when comparing models from CASP8 to the now known structure 
		System.out.println("Cpmparing contactMap file "+cmpfile+" to models in "+workdir); 
		// cmpgraph = new FileRIGraph(cmpfile);
		System.out.println("loaded native "+cmpfile);

		File folder = new File(workdir); 
		File[] listOfFiles = folder.listFiles();
		for (int f = 0; f < listOfFiles.length; f++) {
			if (listOfFiles[f].isFile()) {
				modfile = listOfFiles[f].getName();
				System.out.print("\nFile#"+f+" : " + modfile);
				if ( modfile.indexOf("TS1")>0 && modfile.indexOf(".cmap")<=0) { // first Models only && no cmap files from prev. output 
					System.out.println(" <--!");
					System.out.println("Loading model Structure from "+workdir+modfile); 
					modPDB = new PdbfilePdb( workdir+modfile);
					try {
						chains = modPDB.getChains(); 
						modPDB.load(chains[0]);  // load the first (and only) chain 
					} catch ( PdbLoadError e ) {
						System.err.println(">>> "+e.getMessage()); 
						continue; 
					} // end try/catch 
					System.out.println("model file "+modfile+" created."); 
					modgraph = modPDB.getRIGraph(cType, cutoff);
					System.out.println("Converted to RIG at contactDef("+cType+","+cutoff+")"); 			
					// calculate the overlap 
					cmox = calcCMO( cmpgraph, modgraph); // and score the model A vs. the native Xtal structure using DBconnection conn 
					System.out.println(modfile+" "+cmox); 
				} // end if this is a model 1 
			} // end if no directory 
		} // next file 
	} // end main 

} // end class 
